# This is a basic workflow to help you get started with Actions

name: Converge

on:
  push:
    branches: 
      - main
  workflow_dispatch:

jobs:
  Setup_ChefWorkstation:
    runs-on: self-hosted
    steps:
      - name: Checking if installation required
        continue-on-error: true
        id: check
        run: sudo dpkg -l | grep chef
      - name: Installing ChefWorkstation v21.2.278
        if: steps.check.outcome == 'failure'
        run: |
          wget -q https://packages.chef.io/files/stable/chef-workstation/21.2.278/ubuntu/20.04/chef-workstation_21.2.278-1_amd64.deb
          sudo dpkg -i chef-workstation_21.2.278-1_amd64.deb
          chef -v

  Push_New_Policyfile:
    runs-on: self-hosted
    needs: Setup_ChefWorkstation
    steps:
      - uses: actions/checkout@v2
      - name: Create/push Policyfile.lock
        run: |
          chef update db-server.rb -c /home/r-goto/.chef/config.rb
          chef update web-server.rb -c /home/r-goto/.chef/config.rb
          chef push staging db-server.rb -c /home/r-goto/.chef/config.rb
          chef push staging web-server.rb -c /home/r-goto/.chef/config.rb
  
  Converge_nodes:
    runs-on: self-hosted
    needs: Push_New_Policyfile
    steps:
      - name: Create/push Policyfile.lock
        run: 
          knife ssh 'policy_group:staging' 'sudo chef-client' -c /home/r-goto/.chef/config.rb
  Integration_Test:
    runs-on: self-hosted
    needs: Converge_nodes
    steps:
      - name: Run Inspec
        continue-on-error: true
        run: |
          for i in `knife search 'policy_group:staging AND policy_name:web-server' -i -c /home/r-goto/.chef/config.rb`; do inspec exec $GITHUB_WORKSPACE/test/setup_nginx_test.rb --target ssh://r-goto@$i; done
          for i in `knife search 'policy_group:staging AND policy_name:db-server' -i -c /home/r-goto/.chef/config.rb`; do inspec exec $GITHUB_WORKSPACE/test/setup_postgresql_test.rb --target ssh://r-goto@$i; done
